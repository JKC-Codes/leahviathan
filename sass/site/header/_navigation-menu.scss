@mixin navigation-menu {

$transition: 0.25s ease-in-out;

grid-area: 1 / 1;
z-index: 1; // Ensure nav is always on top of main content
height: 4rem;
display: inline-grid;
grid-template: 1fr / 1fr min-content;
align-items: start;
transform: translateX(calc(-100% + 2.4rem));
transition: transform  $transition;

&[data-javascript-active="false"] {
	height: auto;
	transform: none;
}

&[data-open="true"] {
	transform: translateX(-2rem);
}

@media (min-width: $mq-header-narrow) {
	&[data-open] { // Extra specificity is required
		height: auto;
		transform: none;
		transition: none;
	}
}

.menu-button {
	position: relative;
	grid-area: 1 / 2;
	margin-top: 1rem;
	margin-left: 0.5rem;
	border: 0;
	padding: 0.25rem;
	background: none;
	font-size: 0.7rem;
	line-height: 1;

	&[aria-expanded="false"] {
		background-color: transparent;
	}

	// Only display when JavaScript has added ARIA attribute
	display: none;
	&[aria-expanded] {
		display: block;
	}

	&::before,
	&::after {
		pointer-events: none;
		content: '';
		position: absolute;
		background: transparent;
	}

	&::before {
		z-index: -2; // Keep below ::after hover effect and text
		top: -0.5rem;
		left: -1rem; // Extra gap is needed to prevent tearing when button is active
		bottom: -0.5rem;
		right: -0.5rem;
		border-radius:  0 $border-rounded $border-rounded 0;
		transition: background-color $transition;
	}

	&[aria-expanded="true"]::before {
		background-color: $colour-sea-dark;
	}

	&:hover:not(:active)::after {
		z-index: -1;  // Keep below text
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		border-radius: $border-rounded;
		background: $colour-sea-light;
	}

	&-icon {
		display: block;
		width: 1rem;
		height: 1rem;
		margin: 0 auto 0.2rem;

		.line-top-left,
		.line-top-right,
		.line-mid-left,
		.line-mid-right,
		.line-bottom-left,
		.line-bottom-right {
			transition: transform $transition;
			fill: currentColor;
		}

		.line-top-left {
			transform-origin: 0% 10px;
		}
		.line-top-right {
			transform-origin: 100% 10px;
		}
		.line-mid-left,
		.line-mid-right {
			transform-origin: center;
		}
		.line-bottom-left {
			transform-origin: 0% calc(100% - 10px);
		}
		.line-bottom-right {
			transform-origin: 100% calc(100% - 10px);
		}
	}

	&[aria-expanded="true"] .menu-button-icon {
		.line-top-left {
			transform: translate(5px, -5px) rotate(45deg) scaleX(1.1);
		}

		.line-top-right {
			transform: translate(-5px, -5px) rotate(-45deg) scaleX(1.1);
		}

		.line-mid-left,
		.line-mid-right {
			transform: scaleX(0);
		}

		.line-bottom-left {
			transform: translate(5px, 5px) rotate(-45deg) scaleX(1.1);
		}

		.line-bottom-right {
			transform: translate(-5px, 5px) rotate(45deg) scaleX(1.1);
		}
	}

	@media (min-width: $mq-header-narrow) {
		&[aria-expanded] { // Extra specificity is required
			display: none;
		}
	}
}

.menu {
	grid-area: 1 / 1;
	margin-left: 1rem; // Compensate for translateX(-1rem);
	padding: 1rem 1rem 1rem calc(1rem + 1ch);
	border-bottom-right-radius: $border-rounded;
	background: $colour-sea-dark;
	list-style-type: none;
	transition: background-color $transition;

	@media (min-width: $mq-header-narrow) {
		margin-top: 1rem;
		margin-left: 0;
		padding: 0;
		background: transparent;
		transition: none;
		line-height: 1;
	}

	& [aria-current="page"] {
		position: relative;

		&::before {
			position: absolute;
			display: block;
			content: '';
			background: url("/leahviathan/img/squid.png");
			background-size: contain;
			transform: translateY(-50%);
			top: 50%;
			right: calc(100% + 0.5ch);
			width: 1rem;
			height: 1rem;

			@media (min-width: $mq-header-narrow) {
					display: none;
			}
		}
	}

	@media (min-width: $mq-header-narrow) {
		> li {
			display: inline-block;
			margin: 0 1em 1em 0;
		}
	}
}

.menu-button[aria-expanded="false"] ~ .menu {
	background-color: transparent;
}

}